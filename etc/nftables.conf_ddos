#!/usr/sbin/nft -f

flush ruleset

define ports = { 443 }

table netdev filter {
	set ssh_whitelist_v4 {
		type ipv4_addr
		flags interval
		counter
		elements = { 78.34.0.0/15, 81.173.128.0/17,
			     84.44.128.0/17, 85.197.0.0/18,
			     87.78.0.0/15, 89.0.0.0/15,
			     194.8.192.0/19, 195.14.192.0/19,
			     195.14.224.0/19, 212.8.136.0/21,
			     212.8.144.0/21, 212.117.64.0/19,
			     213.168.64.0/19, 213.168.96.0/19,
			     213.196.192.0/18 }
	}

	set ssh_whitelist_v6 {
		    type ipv6_addr
		    counter
		    flags interval
		    elements = { 2001:4dd0::/29, 2a0a:a540::/28, 2003::/19 }
	}

        # Tor authorities & snowflake-01.torproject.net, snowflake-02.torproject.net
	set whitelist_v4 {
		type ipv4_addr
		flags constant
		elements = { 45.66.35.11, 66.111.2.131,
			     128.31.0.39, 131.188.40.189,
			     141.212.118.18, 171.25.193.9,
			     193.23.244.244, 193.187.88.42,
			     193.187.88.43, 193.187.88.44,
			     193.187.88.45, 193.187.88.46,
			     199.58.81.140, 204.13.164.118,
			     216.218.219.41, 217.196.147.77 }
	}

	set whitelist_v6 {
		type ipv6_addr
		flags constant
		elements = { 2001:470:164:2::2,
			     2001:638:a000:4140::ffff:189,
			     2001:678:558:1000::244,
			     2001:67c:289c::9,
			     2607:f018:600:8:be30:5bff:fef1:c6fa,
			     2610:1c0:0:5::131,
			     2620:13:4000:6000::1000:118,
			     2a02:16a8:662:2203::1,
			     2a0c:dd40:1:b::42,
			     2a0c:dd40:1:b::43,
			     2a0c:dd40:1:b::44,
			     2a0c:dd40:1:b::45,
			     2a0c:dd40:1:b::46 }
	}

	set meter_flood_v4 {
		type ipv4_addr
		size 65535
		flags dynamic,timeout
		timeout 1d
	}

	set meter_flood_v6 {
		type ipv6_addr
		size 65535
		flags dynamic,timeout
		timeout 1d
	}

	set blacklist_v4 {
		type ipv4_addr
		size 65535
		flags dynamic,timeout
		timeout 2d
	}

	set blacklist_v6 {
		type ipv6_addr
		size 65535
		flags dynamic,timeout
		timeout 2d
	}

	chain ingress {
		type filter hook ingress device enp1s0f0 priority -500;

		# Drop all IP FRAGMENTS
		ip frag-off & 0x1fff != 0 counter drop

		# Drop TCP XMAS packets.
		tcp flags & (fin|syn|rst|psh|ack|urg) == fin|syn|rst|psh|ack|urg counter drop

		# Drop TCP NULL packets.
		tcp flags & (fin|syn|rst|psh|ack|urg) == 0x0 counter drop

		# Drop uncommon TCP MSS values.
		tcp flags syn tcp option maxseg size 1-536 counter drop

		# Allow SSH on port 22 but only from whitelist
		tcp dport 22 ip saddr @ssh_whitelist_v4 counter accept
		tcp dport 22 ip6 saddr @ssh_whitelist_v6 counter accept

		# Accept Tor authorities & snowflake-01.torproject.net, snowflake-02.torproject.net
		tcp flags syn tcp dport $ports ip saddr @whitelist_v4 counter accept
                tcp flags syn tcp dport $ports ip6 saddr @whitelist_v6 counter accept

		# Drop packets originating from blacklisted IPs
		ip saddr @blacklist_v4 counter drop
		ip6 saddr @blacklist_v6 counter drop

		# Limit SYN packets per minute, add offenders to blacklist
		tcp flags syn tcp dport $ports add @meter_flood_v4 { ip saddr limit rate over 10/minute burst 1 packets } add @blacklist_v4 { ip saddr } counter drop
		tcp flags syn tcp dport $ports add @meter_flood_v6 { ip6 saddr limit rate over 10/minute burst 1 packets } add @blacklist_v6 { ip6 saddr } counter drop
	}
}

table inet mangle {
	chain prerouting {
		type filter hook prerouting priority -150;

		# CT INVALID
		ct state invalid counter drop

		# TCP SYN (CT NEW)
		tcp flags & (fin|syn|rst|ack) != syn ct state new counter drop
	}
}
